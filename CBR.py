from __future__ import division
import numpy as np
import CB_2008_nga

def predict(M,T,Rrup,Rjb,Ztop,delta,rake,Vs30,Zvs):

	periods = np.array([0.0100000000000000,0.0200000000000000,0.0300000000000000,0.0500000000000000,0.0750000000000000,0.100000000000000,0.150000000000000,0.200000000000000,0.250000000000000,0.300000000000000,0.400000000000000,0.500000000000000,0.750000000000000,1,1.50000000000000,2,3,4,5,7.50000000000000,10])

	coefsCBR = [[-1.72889309448335,0.509727000487783,-0.443860979854214,-0.378345823227086,-2.20776312730116,0.178121280493962,5.77945396478603,0.238954449701287,-0.426126740644089,0.675295450110905,1.01695676773189,-0.0298739869461803,0.292489076250175],
	[-1.69252497871066,0.511438951236637,-0.449673665854221,-0.376751851202013,-2.22219521025703,0.179936405434518,5.75773310049869,0.230303947176953,-0.446491431172178,0.696759369529719,1.06178838032378,-0.0273721942477142,0.281789786240919],
	[-1.56928688352221,0.509044319162413,-0.425877821465305,-0.396484431946216,-2.25825214097809,0.178844002618695,5.76558311664720,0.210457296438475,-0.441908640089450,0.730693363870406,1.12533364822202,-0.0357659373205329,0.309864364222568],
	[-1.22709344118023,0.518709357467082,-0.411776716043038,-0.441067834916688,-2.36274459607279,0.188425267131710,5.89028003922571,0.164226297062493,-0.507108095479404,0.802946296046827,1.24837118008209,-0.0320885758950620,0.341602009953471],
	[-0.669737143836599,0.526852511666643,-0.433093197232144,-0.493080284635291,-2.54574292498360,0.203486293745724,7.11636728471092,0.128780647387127,-0.585281381492111,0.818733930718217,1.44177984766335,-0.0767655375589468,0.349554593621799],
	[-0.327055619346432,0.519257264182624,-0.438936829412209,-0.496153683736527,-2.55223939157886,0.199580987516092,8.03278564963412,0.119620541894730,-0.510438098061510,0.812798847239664,1.54580979627232,-0.0539168204726461,0.318198254668760],
	[-0.145060938157353,0.503975197675218,-0.459689642459234,-0.453000082400397,-2.48730272977512,0.187936745622556,8.79994222427346,0.146277425656432,-0.403637963751389,0.764862478356839,1.78854317519635,-0.0665361487741143,0.424097620092311],
	[-0.496294066439301,0.495209038798274,-0.394173595785492,-0.454027130978957,-2.30219106502317,0.172883176085431,7.70441213267980,0.166747668474656,-0.247155114692051,0.706322439357132,2.00012882109638,-0.00779939726027534,0.444638954918053],
	[-0.893522383424156,0.510577546889293,-0.332049344278032,-0.456448384813527,-2.21927461072628,0.166915308072301,6.69519740971426,0.229545101499025,-0.167229056085911,0.641707940423466,2.14863811159107,0.000761244060429250,0.344902161377976],
	[-1.15796255449975,0.518530035721065,-0.347175914530175,-0.376769397323580,-2.11743265712438,0.162264606884193,6.18324058445741,0.219635996629701,-0.207414578158541,0.675596795476144,2.27305982996194,-0.0342416814824140,0.291801794454946],
	[-1.44318917847459,0.524565324621522,-0.286894193768605,-0.361247750602672,-2.10149963246350,0.165170939854041,5.49330426588870,0.285466052032939,-0.158025630361065,0.618807505876194,2.40811529981350,0.0302257185933018,0.236789002830619],
	[-2.53439442489564,0.689354178348461,-0.460976484725835,-0.235893250357099,-2.01702806019599,0.150766965757342,5.02405477228446,0.316170587168218,-0.126484020902035,0.589944044099432,2.36943671059446,0.00594496095464470,0.183103930217530],
	[-4.79989751702488,1.02508915200453,-0.767474504358624,-0.135577061290753,-1.98529640438145,0.154530424920298,4.29351707002635,0.353838329306541,-0.0678701771195940,0.647020702033236,1.97826037805919,0.00227914094412012,0.100692311340312],
	[-6.38803179176478,1.23651145135271,-0.830313693940320,-0.140440272492030,-1.98963797115776,0.143736336425864,4.20722497035464,0.394565306766038,0.104674671556880,0.544812137825744,1.46698097119228,0.0937375734048495,0.139558999447646],
	[-8.70474214647314,1.53564336805652,-0.953274826343119,-0.196747460940412,-1.99943278568775,0.147742480120538,4.21943715365442,0.365923012157521,0.0205006406872046,0.526630999277629,0.372540184794844,0.215337417444756,0.0851298122821941],
	[-9.74200653284498,1.61733851310464,-0.735125556250608,-0.426856914510484,-2.01462994790784,0.148468552592909,4.40880651718007,0.358389616255241,0.0322960506934493,0.401983334756972,-0.471392819724675,0.211530940674213,0.0341758664908447],
	[-10.6516673864856,1.60563458559584,-0.106194788730423,-0.936793063527308,-1.85712269638234,0.123709676571200,4.63294962498254,0.264012809201955,-0.0431135324193072,0.129057567346899,-0.795202202620552,0.148199180264262,0.0101197849069181],
	[-11.3231082534624,1.58137322211237,0.276468616153591,-1.17534934072762,-1.82054837471362,0.119169291011728,4.64695144568204,0.152081691351767,-0.0204813172146703,-0.111725656898614,-0.783347353692538,0.0868193570552920,0.0534849406068058],
	[-11.7965849527662,1.58283186343301,0.532049103640052,-1.38561432557155,-1.71858873220037,0.109717134839934,4.72298781355948,-0.0241232436395225,-0.0914257842857288,-0.230436320978656,-0.756305837557215,0.00950012656454462,0.0377629929390684],
	[-12.6226007819872,1.54834213285115,0.525146433785803,-1.12265134905920,-1.73003286498990,0.126461655312317,4.52007969655947,-0.0937633684467888,-0.403501337762005,-0.353801842598024,-0.668917690186611,0.0283404647655278,0.0676278941126493],
	[-13.1283531421409,1.60824097233124,0.165683254109275,-0.810521266993003,-1.75161210862020,0.125217845366582,4.16467316604723,-0.301061570666153,-0.223887549835341,-0.382706402605493,-0.475507961280560,0.194998440961864,0.0797259731916542]]

	idx = np.nonzero(periods == T)[0][0]

	c0 = coefsCBR[idx][0]
	c1 = coefsCBR[idx][1]
	c2 = coefsCBR[idx][2]
	c3 = coefsCBR[idx][3]
	c4 = coefsCBR[idx][4]
	c5 = coefsCBR[idx][5]
	c6 = coefsCBR[idx][6]
	c7 = coefsCBR[idx][7]
	c8 = coefsCBR[idx][8]
	c9 = coefsCBR[idx][9]
	c10 = coefsCBR[idx][10]
	c11 = coefsCBR[idx][11]
	c12 = coefsCBR[idx][12]

	k1s = [865,	865,	908,	1054,	1086,	1032,	878,	748,	654,	587,	503,	457,	410,	400,	400,	400,	400,	400,	400,	400,	400]
	k2s = [-1.186,	-1.219,	-1.273,	-1.346,	-1.471,	-1.624,	-1.931,	-2.188,	-2.381,	-2.518,	-2.657,	-2.669,	-2.401,	-1.955,	-1.025,	-0.299,	0,	0,	0,	0,	0]
	k3s = [1.839,	1.84,	1.841,	1.843,	1.845,	1.847,	1.852,	1.856,	1.861,	1.865,	1.874,	1.883,	1.906,	1.929,	1.974,	2.019,	2.11,	2.2,	2.291,	2.517,	2.744]

	k1 = k1s[idx]
	k2 = k2s[idx]
	k3 = k3s[idx]

	# find the A1100 from the CB_2008_nga model
	A1100 = CB_2008_nga.predict(M, 0, Rrup, Rjb, Ztop, delta, rake, 1100, Zvs, 0)

	if A1100 < 0:
		A1100 = 0

	# ffltz initialization
	ffltz = 1;
	if Ztop < 1:
		ffltz = Ztop

	# fhngr initialization
	fhngr = 1;
	if Rjb > 0 and Ztop < 1:
		fhngr = (max(Rrup,np.sqrt(Rjb**2 + 1))-Rjb)/max(Rrup,np.sqrt(Rjb**2 + 1))

	if Rjb > 0 and Ztop >=1:
		fhngr = (Rrup - Rjb)/Rrup

	Frv = 0;
	if rake > 30 and rake < 150:
		Frv = 1

	Fnm = 0
	if rake > -150 and rake < -30:
		Fnm = 1

	fhngm = 0
	if M > 6 and M <6.5:
		fhngm = 2*(M-6)

	if M >= 6.5:
		fhngm = 1

	fmag = 0
	if M <= 5.5:
		fmag = c0 + c1*M

	if M > 5.5 and M <= 6.5:
		fmag = c0 + c1*M + c2*(M - 5.5)

	if M > 6.5:
		fmag = c0 + c1*M + c2*(M-5.5) + c3*(M-6.5)

	fdis = (c4 + c5*M)*np.log(np.sqrt(Rrup**2 + c6**2));

	fflt = c7*Frv*ffltz + c8*Fnm;

	fhngz = 0;
	if Ztop < 20 and Ztop >=0:
		fhngz = (20-Ztop)/20

	fhngd = 1;
	if delta > 70:
		fhngd = (90-delta)/20

	fhng = c9*fhngr*fhngm*fhngz*fhngd

	#fsite
	c = 1.88
	n = 1.18
	fsite = 0

	if Vs30 < k1:
		fsite = c10*np.log(Vs30/k1)+k2*(np.log(A1100+c*(Vs30/k1)**n)-np.log(A1100+c))

	if Vs30 >= k1 and Vs30 < 1100:
		fsite = (c10+k2*n)*np.log(Vs30/k1)

	if Vs30 >= 1100:
		fsite = (c10+ka2*n)*np.log(1100/k1)

	# fsed
	fsed = 0
	if Zvs >=0:
		if Zvs < 1:
			fsed = c11*(Zvs - 1)
    
		if Zvs > 3:
			fsed = c12*k3*np.exp(-0.75)*(1-np.exp(-0.25*(Zvs-3)))

	lnSa = fmag + fdis + fflt + fhng + fsite + fsed

	Sa = np.exp(lnSa)

	sigs = [0.54,0.544,0.557,0.6,0.649,0.660,0.617,0.592,0.575,0.591,0.609,0.633,0.674,0.684,0.664,0.645,0.642,0.636,0.644,0.666,0.635]

	sig = sigs[idx]

	return (Sa,sig)

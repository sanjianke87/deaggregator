from __future__ import division
import numpy as np
import CB_2008_nga

''' 
CBSB model implementation

 The model works at the 21 periods for which regression was performed
 changes will be made to generalize the function to work for other periods

'''

def predict(M,T,Rrup,Rjb,Ztop,delta,rake,Vs30,Zvs,Ipulse,Tp,Ppulse):

	periods = np.array([0.0100000000000000,0.0200000000000000,0.0300000000000000,0.0500000000000000,0.0750000000000000,0.100000000000000,0.150000000000000,0.200000000000000,0.250000000000000,0.300000000000000,0.400000000000000,0.500000000000000,0.750000000000000,1,1.50000000000000,2,3,4,5,7.50000000000000,10])

	coefs = [[-1.72889309448335,0.510461072814827,-0.439607159420271,-0.396261745630246,-2.27835596592280,0.185490579805519,5.77945396478603,0.226854332599543,-0.493409078676253,0.675295450110905,1.01695676773189,-0.0298739869461803,0.292489076250175,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-1.69252497871066,0.518793736591434,-0.454550480093823,-0.390370368104389,-2.29892652184215,0.186300453876736,5.75773310049869,0.213767470620285,-0.509853901395080,0.696759369529719,1.06178838032378,-0.0273721942477142,0.281789786240919,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-1.56928688352221,0.509475060432261,-0.418348900631510,-0.419356255441183,-2.32078851468920,0.187355965514505,5.76558311664720,0.198757230302101,-0.516041789797995,0.730693363870406,1.12533364822202,-0.0357659373205329,0.309864364222568,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-1.22709344118023,0.523349584253614,-0.388745058612067,-0.491277489469854,-2.46707268122443,0.201134749636862,5.89028003922571,0.142877988505543,-0.583583067712639,0.802946296046827,1.24837118008209,-0.0320885758950620,0.341602009953471,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-0.669737143836599,0.536348926889459,-0.397020245143201,-0.571149391726682,-2.67309336166997,0.220047536678026,7.11636728471092,0.0918099768218969,-0.706903029955265,0.818733930718217,1.44177984766335,-0.0767655375589468,0.349554593621799,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-0.327055619346432,0.526407033479251,-0.383366046222763,-0.611129207478814,-2.70545400222547,0.224660989636823,8.03278564963412,0.0816627065646200,-0.657308022272887,0.812798847239664,1.54580979627232,-0.0539168204726461,0.318198254668760,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-0.145060938157353,0.510713025515642,-0.428457949951023,-0.530708641974356,-2.60612395756312,0.206209709291412,8.79994222427346,0.116208173707259,-0.499690357206975,0.764862478356839,1.78854317519635,-0.0665361487741143,0.424097620092311,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-0.496294066439301,0.495048175399613,-0.392631301885887,-0.473142504418594,-2.35169855974391,0.181568650798515,7.70441213267980,0.161641588759992,-0.297178500553279,0.706322439357132,2.00012882109638,-0.00779939726027534,0.444638954918053,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-0.893522383424156,0.508247094544670,-0.362602249843078,-0.473582360325604,-2.24628000029821,0.172472473006735,6.69519740971426,0.226227083351260,-0.230136091323552,0.641707940423466,2.14863811159107,0.000761244060429250,0.344902161377976,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-1.15796255449975,0.525340261271538,-0.425041197387549,-0.331276302414380,-2.17734075556356,0.172473884162837,6.18324058445741,0.233399769427065,-0.259487497191017,0.675596795476144,2.27305982996194,-0.0342416814824140,0.291801794454946,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-1.44318917847459,0.524231585953250,-0.339746425725426,-0.306967005859753,-2.13511639168879,0.172669162712867,5.49330426588870,0.298083343393880,-0.199664222673971,0.618807505876194,2.40811529981350,0.0302257185933018,0.236789002830619,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-2.53439442489564,0.678578124180971,-0.471059049385703,-0.207306911383547,-2.03171542294780,0.160400033683982,5.02405477228446,0.315593709043419,-0.141419112670867,0.589944044099432,2.36943671059446,0.00594496095464470,0.183103930217530,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-4.79989751702488,0.999696548968651,-0.777623287123066,-0.129524443080520,-1.98643328779444,0.158754142993095,4.29351707002635,0.353648457435172,-0.0756335177573543,0.647020702033236,1.97826037805919,0.00227914094412012,0.100692311340312,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-6.38803179176478,1.20722074763057,-0.834650009962005,-0.125627552298310,-1.99167271861576,0.155560997385040,4.20722497035464,0.384647438903960,0.0972933315676041,0.544812137825744,1.46698097119228,0.0937375734048495,0.139558999447646,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-8.70474214647314,1.50348386432649,-0.956465949507546,-0.204392006422093,-1.99655550728696,0.157062493467733,4.21943715365442,0.358251570936824,0.00820906408187541,0.526630999277629,0.372540184794844,0.215337417444756,0.0851298122821941,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-9.74200653284498,1.58135969899097,-0.742715027733491,-0.444384452881641,-2.01418219610522,0.157003861172319,4.40880651718007,0.342862630083603,0.0238519372255565,0.401983334756972,-0.471392819724675,0.211530940674213,0.0341758664908447,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-10.6516673864856,1.56384605634230,-0.114058794492028,-0.965940073626437,-1.84115088382452,0.132530030211362,4.63294962498254,0.260151836889128,-0.0535686057562094,0.129057567346899,-0.795202202620552,0.148199180264262,0.0101197849069181,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-11.3231082534624,1.54346525501328,0.264018638394813,-1.22342973032918,-1.79422361262873,0.124270034158997,4.64695144568204,0.151728987044853,-0.0316510409016205,-0.111725656898614,-0.783347353692538,0.0868193570552920,0.0534849406068058,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-11.7965849527662,1.53478809705033,0.546684594674914,-1.45432144238381,-1.67728806530706,0.115983506289379,4.72298781355948,-0.0214804965344410,-0.122409627318916,-0.230436320978656,-0.756305837557215,0.00950012656454462,0.0377629929390684,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-12.6226007819872,1.48691914786663,0.661591250370207,-1.31214960370998,-1.63171710440241,0.126331641576428,4.52007969655947,-0.0957201763751835,-0.494178687230732,-0.353801842598024,-0.668917690186611,0.0283404647655278,0.0676278941126493,0.723194300000000,-1.10413530000000,-0.191064200000000],
    [-13.1283531421409,1.55240292332322,0.297657949329178,-1.00572205680719,-1.73296787974133,0.127913489807026,4.16467316604723,-0.293924470170602,-0.357764944532140,-0.382706402605493,-0.475507961280560,0.194998440961864,0.0797259731916542,0.723194300000000,-1.10413530000000,-0.191064200000000]]

	idx = np.nonzero(periods == T)[0][0]
	
	c0 = coefs[idx][0];
	c1 = coefs[idx][1];
	c2 = coefs[idx][2];
	c3 = coefs[idx][3];
	c4 = coefs[idx][4];
	c5 = coefs[idx][5];
	c6 = coefs[idx][6];
	c7 = coefs[idx][7];
	c8 = coefs[idx][8];
	c9 = coefs[idx][9];
	c10 = coefs[idx][10];
	c11 = coefs[idx][11];
	c12 = coefs[idx][12];
	c13 = coefs[idx][13];
	c14 = coefs[idx][14];
	c15 = coefs[idx][15];

	k1s = [865,865,908,	1054,	1086,	1032,	878,	748,	654,	587,	503,	457,	410,	400,	400,	400,	400,	400,	400,	400,	400]
	k2s = [-1.186,	-1.219,	-1.273,	-1.346,	-1.471,	-1.624,	-1.931,	-2.188,	-2.381,	-2.518,	-2.657,	-2.669,	-2.401,	-1.955,	-1.025,	-0.299,	0,	0,	0,	0,	0]
	k3s = [1.839,	1.84,	1.841,	1.843,	1.845,	1.847,	1.852,	1.856,	1.861,	1.865,	1.874,	1.883,	1.906,	1.929,	1.974,	2.019,	2.11,	2.2,	2.291,	2.517,	2.744]

	k1 = k1s[idx];
	k2 = k2s[idx];
	k3 = k3s[idx];

	# find the A1100 from the CB_2008_nga model
	A1100,buffer = CB_2008_nga.predict(M, 0, Rrup, Rjb, Ztop, delta, rake, 1100, Zvs, 0);

	if(A1100 < 0):
		A1100 = 0 
	
	# ffltz initialization
	ffltz = 1;
	if(Ztop < 1):
		ffltz = Ztop;

	# fhngr initialization
	fhngr = 1;
	if Rjb > 0 and Ztop < 1:
		fhngr = (max(Rrup,np.sqrt(Rjb**2 + 1))-Rjb)/max(Rrup,np.sqrt(Rjb**2 + 1))

	if Rjb > 0 and Ztop >=1:
		fhngr = (Rrup - Rjb)/Rrup

	Frv = 0
	if rake > 30 and rake < 150:
		Frv = 1;

	Fnm = 0
	if rake > -150 and rake < -30:
		Fnm = 1

	fhngm = 0
	if M > 6 and M <6.5:
		fhngm = 2*(M-6)

	if M >= 6.5:
		fhngm = 1

	fmag = 0
	if M <= 5.5:
		fmag = c0 + c1*M;

	if M > 5.5 and M <= 6.5:
		fmag = c0 + c1*M + c2*(M - 5.5)

	if M > 6.5:
		fmag = c0 + c1*M + c2*(M-5.5) + c3*(M-6.5)

	fdis = (c4 + c5*M)*np.log(np.sqrt(Rrup**2 + c6**2))

	fflt = c7*Frv*ffltz + c8*Fnm

	fhngz = 0
	if Ztop < 20 and Ztop >=0:
		fhngz = (20-Ztop)/20

	fhngd = 1
	if delta > 70:
		fhngd = (90-delta)/20

	fhng = c9*fhngr*fhngm*fhngz*fhngd

	#fsite
	c = 1.88
	n = 1.18
	fsite = 0

	if Vs30 < k1:
		fsite = c10*np.log(Vs30/k1)+k2*(np.log(A1100+c*(Vs30/k1)**n)-np.log(A1100+c))

	if Vs30 >= k1 and Vs30 < 1100:
		fsite = (c10+k2*n)*np.log(Vs30/k1)

	if Vs30 >= 1100:
		fsite = (c10+k2*n)*np.log(1100/k1)

	# fsed
	fsed = 0;
	if Zvs >= 0:
		if Zvs < 1:
			fsed = c11*(Zvs - 1)
		if Zvs > 3:
			fsed = c12*k3*np.exp(-0.75)*(1-np.exp(-0.25*(Zvs-3)))

	lnSa = fmag + fdis + fflt + fhng + fsite + fsed;

	fpulse = 0;
	if Ipulse == 1:
		fpulse = c13*np.exp(c14*(np.log(T/Tp) - c15)**2)

	lnSa = lnSa + Ppulse * fpulse;

	Sa = np.exp(lnSa);

	sigs = [0.541,0.546,0.558,0.603,0.655,0.668,0.619,0.591,0.573,0.589,0.608,0.633,0.671,0.680,0.658,0.640,0.634,0.626,0.629,0.640,0.611]

	sig = sigs[idx];
	
	return Sa,sig